<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				showCloseButton="true"
				title="{resourceManager.getString('localization','title_changePwd')}"
				titleStyleName="twTitleStyle"
				creationComplete="init()"
				close="close()"
				paddingLeft="0"
				paddingRight="0"
				paddingBottom="0"
				paddingTop="0"
				width="320"
				height="200"
				xmlns:common="org.just.xch.view.component.common.*">

	<mx:RemoteObject id="sSysUserService"
					 destination="sysUserService"
					 concurrency="single"
					 showBusyCursor="true">
		<mx:method name="updatePassword"
				   result="onUpdatePasswordReturn(event)"
				   fault="fault(event)"/>
	</mx:RemoteObject>

	<mx:Script>
		<![CDATA[
			import org.just.xch.utils.AlertUtil;
			import org.just.xch.model.domain.SysUser;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			import mx.managers.PopUpManager;

			[Bindable]
			public var sysUser:SysUser;
			[Bindable]
			private var validatorArr:Array;

			private function init():void
			{
				initValidator();
			}

			private function close():void
			{
				PopUpManager.removePopUp(this);
			}

			private function save():void
			{
				var validatorErrorArray:Array=Validator.validateAll(validatorArr);
				var isValidForm:Boolean=(validatorErrorArray.length == 0);
				if (!isValidForm)
				{
					AlertUtil.errorMessages(validatorErrorArray);
				}
				else
				{
					if (newPwd1Txt.text != newPwd2Txt.text)
					{
						AlertUtil.showMessages(resourceManager.getString('localization', 'msg_lcmmbyz'));
					}
					else
					{
						if (sysUser != null)
						{
							sSysUserService.updatePassword(sysUser, oldPwdTxt.text, newPwd1Txt.text);
						}
					}
				}

			}

			public function onUpdatePasswordReturn(event:ResultEvent):void
			{
				Alert.show(resourceManager.getString('localization', 'msg_changeSuccess'));
				close();
			}

			public function fault(event:FaultEvent)
			{
				AlertUtil.remoteMsg(event);
			}

			private function initValidator():void
			{
				validatorArr=new Array();
				validatorArr.push(oldPwdStrValidator);
				validatorArr.push(newPwd1StrValidator);
				validatorArr.push(newPwd2StrValidator);
			}
		]]>
	</mx:Script>

	<mx:VBox width="100%"
			 height="100%"
			 verticalAlign="middle"
			 horizontalAlign="center"
			 paddingLeft="5"
			 paddingRight="5">
		<mx:Form width="100%"
				 height="100%">
			<mx:FormItem label="{resourceManager.getString('localization','label_oldPwd')+':'}"
						 horizontalAlign="right">
				<mx:TextInput id="oldPwdTxt"
							  width="160"
							  displayAsPassword="true"/>
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('localization','label_newPwd')+':'}"
						 horizontalAlign="right">
				<mx:TextInput id="newPwd1Txt"
							  width="160"
							  displayAsPassword="true"/>
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('localization','label_newPwdAgain')+':'}"
						 horizontalAlign="right">
				<mx:TextInput id="newPwd2Txt"
							  width="160"
							  displayAsPassword="true"/>
			</mx:FormItem>
		</mx:Form>
		<mx:HBox width="100%"
				 height="40"
				 verticalAlign="middle"
				 horizontalAlign="center">
			<common:BtnSave click="save()"/>
			<common:BtnClose click="close()"/>
		</mx:HBox>
	</mx:VBox>

	<mx:StringValidator id="oldPwdStrValidator"
						source="{oldPwdTxt}"
						requiredFieldError="{resourceManager.getString('localization','msg_oldPwdEmpty')}"
						minLength="1"
						maxLength="20"
						property="text"/>
	<mx:StringValidator id="newPwd1StrValidator"
						source="{newPwd1Txt}"
						requiredFieldError="{resourceManager.getString('localization','msg_newPwdEmpty')}"
						minLength="1"
						maxLength="20"
						property="text"/>
	<mx:StringValidator id="newPwd2StrValidator"
						source="{newPwd2Txt}"
						requiredFieldError="{resourceManager.getString('localization','msg_newPwdAgainEmpty')}"
						minLength="1"
						maxLength="20"
						property="text"/>
</mx:TitleWindow>
